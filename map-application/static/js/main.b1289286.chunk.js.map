{"version":3,"sources":["hooks/useInput.js","services/loginService.js","component/LoginBlock.js","actions/actions.js","reducers/rootReducer.js","reducers/loginReducer.js","reducers/locationReducer.js","store.js","utility/signout.js","component/LoginPage.js","component/BaseMapView.js","component/PublicMapView.js","services/locationService.js","component/LoginMapView.js","component/LocationList.js","component/ProtectedRoute.js","component/MarkLocation.js","component/NavBar.js","history/history.js","App.js","serviceWorker.js","index.js"],"names":["useInput","initialValue","useState","value","setValue","onChange","e","target","loginService","signIn","data","axios","method","url","headers","then","response","catch","error","useStyles","makeStyles","root","position","top","display","justifyContent","width","height","buttonRoot","margin","inputField","alert","boxSizing","withRouter","props","classes","username","password","isBadEntry","setBadEntry","dispatch","useDispatch","className","form","Alert","severity","onClose","TextField","id","label","variant","required","type","Button","disabled","color","onClick","status","console","debug","token","access_token","history","push","submitForm","rootReducer","combineReducers","authentication","state","action","Object","assign","isLogin","accessToken","locations","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","signout","background","LoginPage","useEffect","buttonDiv","button","BaseMapView","mapMode","mapAttribute","handlers","buttons","mapboxgl","mapType","setMapType","map","useRef","buttonCommonProps","size","current","Map","container","style","center","lng","lat","zoom","addControl","window","MapboxGeocoder","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","forEach","handler","setStyle","padding","children","buttonText","PublicMapView","locationService","getLocations","addLocation","sidebarStyle","backgroundColor","zIndex","fontWeight","LoginMapView","setMapAttribute","React","open","setOpen","useSelector","handleClose","on","lngLat","toFixed","getZoom","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","log","autoFocus","LocationList","locationList","setlocationList","ListItemLink","ListItem","component","Link","saveAll","List","location","index","to","pathname","ListItemText","primary","ProtectedRoute","Component","rest","render","from","MarkLocation","useParams","find","flyTo","essential","marker","Marker","setLngLat","addTo","routes","path","exact","main","protectedRoutes","navBarContent","beforeLogin","sidebar","afterLogin","NavBar","route","NavLink","textDecoration","activeStyle","isActive","match","createHistory","App","Boolean","hostname","ReactDOM","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b1289286.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function useInput(initialValue) {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    function handleChange(e) {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange: handleChange\r\n    }\r\n};\r\n","import axios from 'axios';\r\n\r\nfunction signIn(data) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:3001/login',\r\n        data: data,\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(function (response) {\r\n        // handle success\r\n        return response;\r\n    })\r\n        .catch(function (error) {\r\n            return error;\r\n        });\r\n}\r\n\r\nexport const loginService = {\r\n    signIn\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from '../actions/actions';\r\nimport { withRouter } from 'react-router';\r\nimport { loginService } from '../services/loginService';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        top: '15%',\r\n        display: ' flex',\r\n        justifyContent: 'center',\r\n        width: '60%',\r\n        height: '40%',\r\n    },\r\n    buttonRoot: {\r\n        width: '100%',\r\n        margin: '3%',\r\n        height: '56px'\r\n    },\r\n    inputField: {\r\n        width: '100%',\r\n        margin: '3%',\r\n    },\r\n    alert: {\r\n        margin: '3%',\r\n        width: '100%',\r\n        boxSizing: 'border-box'\r\n    }\r\n\r\n});\r\n\r\nconst LoginBlock = (props) => {\r\n\r\n    const classes = useStyles(props);\r\n    const username = useInput(\"\");\r\n    const password = useInput(\"\");\r\n    const [isBadEntry, setBadEntry] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function submitForm() {\r\n        const data = {\r\n            username: username.value,\r\n            password: password.value,\r\n        }\r\n        loginService.signIn(data)\r\n            .then(response => {\r\n                response.response && response.response.status == \"401\" && setBadEntry(true);\r\n                console.debug(response)\r\n                dispatch(login(response.data.access_token))\r\n                props.history.push(\"/locations/new\");\r\n            })\r\n            .catch(error => {\r\n                console.debug(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.form}>\r\n                {isBadEntry && <Alert className={classes.alert} severity=\"error\" onClose={() => { setBadEntry(false) }}>Incorrect username or password.</Alert>}\r\n                <TextField\r\n                    id=\"username-00\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    classes={{ root: classes.inputField }}\r\n                    {...username}\r\n                />\r\n                <TextField\r\n                    id=\"password--00\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    classes={{ root: classes.inputField }}\r\n                    {...password}\r\n                />\r\n                <Button\r\n                    classes={{ root: classes.buttonRoot }}\r\n                    disabled={(username.value == \"\" || password.value == \"\") ? true : false}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => { submitForm() }}>\r\n                    Sign In\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(LoginBlock);\r\n","/*\r\n * action types\r\n */\r\n// export const SAVE_TOKEN = 'SAVE_TOKEN';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SAVE_ALL = 'SAVE_ALL';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\n// export function saveToken(token) {\r\n//     return { type: SAVE_TOKEN, token }\r\n// }\r\nexport function logout() {\r\n    return { type: LOGOUT }\r\n}\r\nexport function login(token) {\r\n    return { type: LOGIN, token }\r\n}\r\nexport function saveAll(locations) {\r\n    return { type: SAVE_ALL, locations }\r\n}","import { combineReducers } from 'redux'\r\nimport { authentication } from './loginReducer';\r\nimport { locations } from './locationReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    locations\r\n})\r\nexport default rootReducer;","import {\r\n    LOGIN, LOGOUT\r\n} from '../actions/actions'\r\n\r\n\r\n\r\nexport function authentication(state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGOUT:\r\n            console.debug(\"Logout reducer is being excecuted\");\r\n            return Object.assign({}, state, {\r\n                isLogin: false,\r\n                accessToken: \"\"\r\n            })\r\n        case LOGIN:\r\n            return Object.assign({}, state, {\r\n                isLogin: true,\r\n                accessToken: action.token,\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    SAVE_ALL\r\n} from '../actions/actions'\r\n\r\n\r\n\r\nexport function locations(state = [], action) {\r\n    switch (action.type) {\r\n        case SAVE_ALL:\r\n            return action.locations\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from 'redux'\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","import { logout } from \"../actions/actions\"\r\nimport { store } from \"../store\";\r\n\r\nexport default function signout(props) {\r\n    store.dispatch(logout())\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LoginBlock from './LoginBlock';\r\nimport signout from '../utility/signout';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        background: 'white'\r\n    },\r\n});\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const classes = useStyles(props);\r\n\r\n    useEffect(() => {\r\n        console.debug(\"logout is being executed from here\")\r\n        signout()\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <LoginBlock />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LoginPage;","import React, { useState, useEffect, useRef } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    buttonDiv: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    button: {\r\n        margin: \"5px\"\r\n    }\r\n});\r\n\r\nfunction BaseMapView(props) {\r\n\r\n    const classes = useStyles(props);\r\n    const { mapMode, mapAttribute, handlers, buttons } = props;\r\n    mapboxgl.accessToken = 'pk.eyJ1Ijoic3VyZXNoLXplbW9zbyIsImEiOiJjazkweng5cXowNmd0M2Zyb2I0YjllMWFoIn0.uCF7DOpC6m3gvu3n2uoQ8A';\r\n\r\n    const [mapType, setMapType] = useState(mapMode ? mapMode : \"streets-v11\");\r\n    const map = useRef();\r\n    console.debug(\"Button are\", buttons);\r\n\r\n    const buttonCommonProps = (classes) => {\r\n        return {\r\n            className: classes.button,\r\n            size: \"small\",\r\n            color: \"primary\",\r\n            variant: \"contained\"\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.debug(\"Map type is\", mapType);\r\n        map.current = new mapboxgl.Map({\r\n            container: \"map\",\r\n            style: `mapbox://styles/mapbox/${mapType}`,\r\n            center: [mapAttribute.lng, mapAttribute.lat],\r\n            zoom: mapAttribute.zoom\r\n        });\r\n        console.debug(\"this got executed\");\r\n\r\n\r\n        //Search location using input\r\n        map.current.addControl(\r\n            new window.MapboxGeocoder({\r\n                accessToken: mapboxgl.accessToken,\r\n                mapboxgl: mapboxgl\r\n            })\r\n        );\r\n\r\n        // Add geolocate control to the map.\r\n        map.current.addControl(\r\n            new mapboxgl.GeolocateControl({\r\n                positionOptions: {\r\n                    enableHighAccuracy: true\r\n                },\r\n                trackUserLocation: true\r\n            })\r\n        );\r\n        handlers && handlers.forEach(handler => {\r\n            handler(map.current);\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        map.current.setStyle('mapbox://styles/mapbox/' + mapType);\r\n    }, [mapType]);\r\n\r\n    return (\r\n        <div style={{ height: \"100%\", padding: \"2% 3% 1% 3%\", boxSizing: \"border-box\" }} >\r\n            {props.children}\r\n            <div className={classes.buttonDiv}>\r\n                <Button\r\n                    {...buttonCommonProps(classes)}\r\n                    onClick={() => { setMapType(\"satellite-v9\") }}>Satellite view</Button>\r\n                <Button\r\n                    {...buttonCommonProps(classes)}\r\n                    onClick={() => { setMapType(\"streets-v11\") }}>Street view</Button>\r\n                {\r\n                    buttons && buttons.map((button) =>\r\n                        <Button\r\n                            {...buttonCommonProps(classes)}\r\n                            onClick={button.onClick}\r\n                        >{button.buttonText}</Button>\r\n                    )}\r\n            </div>\r\n            <div style={{ height: \"93%\" }} id=\"map\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseMapView;","import React from 'react';\r\nimport BaseMapView from './BaseMapView';\r\n\r\nexport default function PublicMapView() {\r\n    return (\r\n        <BaseMapView mapAttribute={{ lng: 5, lat: 34, zoom: 2 }} mapMode=\"streets-v11\" />\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nfunction getLocations(token) {\r\n    return axios({\r\n        method: 'get',\r\n        url: 'http://localhost:3001/locations',\r\n        headers: { 'Authorization': token }\r\n    }).then(function (response) {\r\n        // handle success\r\n        return response;\r\n    })\r\n        .catch(function (error) {\r\n            return error;\r\n        })\r\n}\r\nfunction addLocation(data, token) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:3001/locations',\r\n        data,\r\n        headers: { 'Authorization': token }\r\n    })\r\n        .then(function (response) {\r\n            return response;\r\n        })\r\n        .catch(function (error) {\r\n            return error;\r\n        })\r\n}\r\n\r\nexport const locationService = {\r\n    getLocations,\r\n    addLocation\r\n}","import React, { useState } from 'react';\r\nimport BaseMapView from './BaseMapView';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useSelector } from \"react-redux\";\r\nimport { locationService } from '../services/locationService';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    sidebarStyle: {\r\n        position: 'absolute',\r\n        backgroundColor: '#404040',\r\n        color: '#ffffff',\r\n        zIndex: '1!important',\r\n        padding: '6px',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nexport default function LoginMapView(props) {\r\n\r\n    const [mapAttribute, setMapAttribute] = useState({ lng: 73.413827, lat: 25.676973, zoom: 2 });\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const accessToken = useSelector(state => state.authentication.accessToken);\r\n    const classes = useStyles(props);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function addMapOnclick(map) {\r\n        console.debug(\"Map is: \", map);\r\n        map.on('click', (e) => {\r\n            console.debug(\"clicked\", e)\r\n            setMapAttribute({\r\n                lng: e.lngLat.lng.toFixed(6),\r\n                lat: e.lngLat.lat.toFixed(6),\r\n                zoom: map.getZoom().toFixed(2)\r\n            });\r\n        });\r\n    }\r\n    function addLocation(mapAttribute) {\r\n        const data = {\r\n            lng: mapAttribute.lng,\r\n            lat: mapAttribute.lat\r\n        }\r\n        locationService.addLocation(data, accessToken)\r\n            .then(response => {\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        handleClose();\r\n    }\r\n    return (\r\n        <>\r\n            <BaseMapView\r\n                handlers={[addMapOnclick]}\r\n                mapAttribute={{\r\n                    lng: mapAttribute.lng,\r\n                    lat: mapAttribute.lat,\r\n                    zoom: mapAttribute.zoom\r\n                }}\r\n                mapMode=\"streets-v11\"\r\n                buttons={[{ buttonText: \"Add Location\", onClick: () => handleClickOpen() }]}\r\n            >\r\n                <div className={classes.sidebarStyle}>\r\n                    <div>Longitude: {mapAttribute.lng} | Latitude: {mapAttribute.lat}</div>\r\n                </div>\r\n            </BaseMapView >\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Save Location\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Do you want to save location with Longitude {mapAttribute.lng} and Latitude {mapAttribute.lat} ?\r\n          </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={() => addLocation(mapAttribute)} color=\"primary\" autoFocus>\r\n                        Confirm\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { saveAll } from '../actions/actions';\r\nimport { locationService } from '../services/locationService';\r\n\r\n\r\nexport default function LocationList() {\r\n\r\n    const [locationList, setlocationList] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const accessToken = useSelector(state => state.authentication.accessToken);\r\n\r\n    useEffect(() => {\r\n        locationService.getLocations(accessToken)\r\n            .then(response => {\r\n                const locations = response.data;\r\n                setlocationList(locations);\r\n                //save data in redux\r\n                dispatch(saveAll(locations));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n\r\n    function ListItemLink(props) {\r\n        return <ListItem button component={Link} {...props} />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\">\r\n                {locationList.map((location, index) =>\r\n                    <ListItemLink key={location.id} id={location.id} to={{\r\n                        pathname: `/locations/${location.id}`,\r\n                        state: {\r\n                            mapAttribute: { lng: location.lng, lat: location.lat }\r\n                        }\r\n                    }}\r\n                    >\r\n                        <ListItemText primary={`${index + 1}. Longtitue ${location.lng} and Latitue ${location.lat}`} />\r\n                    </ListItemLink>\r\n                )}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const ProtectedRoute = ({\r\n    component: Component,\r\n    isLogin,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (isLogin) {\r\n                    return <Component {...props} />;\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    from: props.location\r\n                                }\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport BaseMapView from './BaseMapView';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function MarkLocation(props) {\r\n\r\n    const { id } = useParams();\r\n    const locations = useSelector(state => state.locations);\r\n    const mapAttribute = locations.find(location => {\r\n        return location.id == id\r\n    })\r\n    function flyToLocation(map) {\r\n        console.debug(\"Map is: \", map);\r\n        map.on('load', (e) => {\r\n            map.flyTo({\r\n                center: [\r\n                    mapAttribute.lng,\r\n                    mapAttribute.lat,\r\n                ],\r\n                zoom: 10,\r\n                essential: true // this animation is considered essential with respect to prefers-reduced-motion\r\n            });\r\n\r\n            var marker = new mapboxgl.Marker();\r\n            // Update the data to a new position based on the animation timestamp. The\r\n            // divisor in the expression `timestamp / 1000` controls the animation speed.\r\n            marker.setLngLat([\r\n                mapAttribute.lng,\r\n                mapAttribute.lat\r\n            ]);\r\n\r\n            // Ensure it's added to the map. This is safe to call if it's already added.\r\n            marker.addTo(map);\r\n\r\n            // Request the next frame of the animation.\r\n            // requestAnimationFrame(animateMarker);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <BaseMapView mapAttribute={{ lng: 5, lat: 34, zoom: 2 }} handlers={[flyToLocation]} />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport PublicMapView from \"./PublicMapView\";\r\nimport LoginMapView from \"./LoginMapView\";\r\nimport LocationList from \"./LocationList\";\r\nimport { ProtectedRoute } from \"./ProtectedRoute\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from \"react-redux\";\r\nimport signout from \"../utility/signout\"\r\nimport MarkLocation from \"./MarkLocation\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        width: \"100%\",\r\n        height: \"12vh\"\r\n    }\r\n});\r\n\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: () => <LoginPage />\r\n    },\r\n    {\r\n        path: \"/map\",\r\n        exact: true,\r\n        main: () => <PublicMapView />\r\n    }\r\n];\r\n\r\nconst protectedRoutes = [\r\n    {\r\n        path: \"/locations/new\",\r\n        exact: true,\r\n        main: () => <LoginMapView />\r\n    },\r\n    {\r\n        path: \"/locations\",\r\n        exact: true,\r\n        main: () => <LocationList />\r\n    },\r\n    {\r\n        path: \"/locations/:id\",\r\n        exact: true,\r\n        main: () => <MarkLocation />\r\n    }\r\n]\r\n\r\nconst navBarContent = {\r\n    beforeLogin: [\r\n        {\r\n            to: \"/\",\r\n            exact: true,\r\n            sidebar: \"Login\",\r\n        },\r\n        {\r\n            to: \"/map\",\r\n            exact: true,\r\n            sidebar: \"Map\",\r\n        }],\r\n    afterLogin: [\r\n        {\r\n            to: \"/locations/new\",\r\n            exact: true,\r\n            sidebar: \"Add Location\",\r\n        },\r\n        {\r\n            to: \"/locations\",\r\n            exact: true,\r\n            sidebar: \"View Locations\",\r\n        },\r\n        {\r\n            to: \"\",\r\n            exact: true,\r\n            sidebar: \"Logout\",\r\n            onClick: () => signout()\r\n        }\r\n    ]\r\n}\r\n\r\nexport default function NavBar(props) {\r\n\r\n    const classes = useStyles(props);\r\n    const isLogin = useSelector(state => state.authentication.isLogin);\r\n\r\n    return (\r\n        <Router>\r\n            <div style={{ display: \"flex\", height: \"100%\", width: \"100%\" }}>\r\n                <div\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        width: \"20%\",\r\n                        background: \"#f0f0f0\",\r\n                    }}\r\n                >\r\n                    {!isLogin && navBarContent.beforeLogin.map((route, index) => (\r\n                        <Button component={NavLink}\r\n                            key={index}\r\n                            to={route.to}\r\n                            style={{ textDecoration: \"none\" }}\r\n                            activeStyle={{\r\n                                background: \"#3f51b5\",\r\n                                color: \"white\"\r\n                            }}\r\n                            isActive={(match, location) => {\r\n                                return route.to === location.pathname\r\n                            }} onClick={route.onClick} className={classes.button}>{route.sidebar}</Button>\r\n                    ))}\r\n                    {isLogin &&\r\n                        navBarContent.afterLogin.map((route, index) => (\r\n                            <Button\r\n                                key={index}\r\n                                to={route.to}\r\n                                component={NavLink}\r\n                                style={{ textDecoration: \"none\" }}\r\n                                activeStyle={{\r\n                                    background: \"#3f51b5\",\r\n                                    color: \"white\"\r\n                                }}\r\n                                isActive={(match, location) => {\r\n                                    console.debug(match, location);\r\n                                    return route.to === location.pathname\r\n                                }} onClick={route.onClick} className={classes.button}>{route.sidebar}</Button>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <div style={{ width: \"80%\" }}>\r\n                    <Switch>\r\n                        {routes.map((route, index) => (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                exact={route.exact}\r\n                                component={route.main}\r\n                            />\r\n                        ))}\r\n                        {protectedRoutes.map((route, index) => (\r\n                            <ProtectedRoute\r\n                                key={index}\r\n                                path={route.path}\r\n                                exact={route.exact}\r\n                                isLogin={isLogin}\r\n                                component={route.main}\r\n                            />\r\n                        ))}\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavBar from './component/NavBar';\nimport history from './history/history';\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    width: '100vw',\n  },\n});\n\nconst App = (props) => {\n\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <BrowserRouter history={history}>\n        <NavBar />\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}